# ------------------------------------------------------------------
# Replit-Agent Task · Keep Session 1 and Session 2 separate
# Repo: https://replit.com/@e89030922661/FormTrack
# ------------------------------------------------------------------

ROOT CAUSE
==========  
Our view/queries join `training_entries` to `training_sessions`
by **date + type only**, ignoring `session_number`.
When athletes log Session 1 and Session 2 on the same day, rows
collapse into one, the RPE is averaged, and coaches see a single
“120-min” load instead of two 60-min loads.

FIX
===  
Join and group on `session_number` as well, so each session ID is
independent from start to finish.

--------------------------------------------------------------------
## 0 · Ensure column presence
```sql
ALTER TABLE training_entries   ADD COLUMN IF NOT EXISTS session_number INTEGER DEFAULT 1;
ALTER TABLE training_sessions  ADD COLUMN IF NOT EXISTS session_number INTEGER DEFAULT 1;
1 · Patch SQL view (migrations/20240605_fix_sessions.sql)
sql
Copy
Edit
CREATE OR REPLACE VIEW session_metrics_from_entries AS
SELECT 
    te.date                                AS session_date,
    CASE
        WHEN te.training_type ILIKE '%field%' THEN 'Field'
        WHEN te.training_type ILIKE '%gym%'   THEN 'Gym'
        WHEN te.training_type ILIKE '%match%' THEN 'Match'
        ELSE 'Other'
    END                                     AS type,
    te.session_number,                      -- <-- keep distinct
    te.team_id,
    COUNT(*)                                AS participants,
    AVG(te.effort_level)::NUMERIC(4,2)      AS avg_rpe,
    ROUND(
        AVG(te.effort_level)
      * (1 + (AVG(te.emotional_load)::INT - 1) * 0.125)
      * COALESCE(ts.duration_minutes, 60)
      * CASE
          WHEN te.training_type ILIKE '%field%' THEN 1.2
          WHEN te.training_type ILIKE '%gym%'   THEN 1.0
          WHEN te.training_type ILIKE '%match%' THEN 1.5
          ELSE 1.0
        END
    )                                         AS session_load
FROM training_entries te
LEFT JOIN training_sessions ts
       ON ts.session_date   = te.date
      AND ts.session_number = te.session_number   -- <-- add
      AND ts.type           = CASE
          WHEN te.training_type ILIKE '%field%' THEN 'Field'
          WHEN te.training_type ILIKE '%gym%'   THEN 'Gym'
          WHEN te.training_type ILIKE '%match%' THEN 'Match'
          ELSE 'Other'
        END
GROUP BY 1,2,3,4;
Now Session 1 and Session 2 aggregate separately.

2 · Update storage-layer queries
diff
Copy
Edit
-- getCoachTrainingLog
- GROUP BY session_date, type, session_number, participants ...
+ GROUP BY session_date, type, session_number, participants ...

-- getCoachWeeklyLoad  (sum daily loads)
- SUM(session_load) AS daily_load
+ SUM(session_load) AS daily_load          -- unchanged but now sums two rows
(No other logic change; view already provides separate rows.)

3 · Front-end (Training Log row key)
Make list row key include session_number so two rows don’t merge:

jsx
Copy
Edit
key={`${row.date}-${row.type}-${row.session_number}`}
Display “Session 1 / Session 2” label if desired.

4 · Verify
Two 60-min sessions on same day → coach Training Log shows two rows,
each with its own participants count & AU.

Weekly-Load chart bar height ≈ sum of both loads (was previously one
averaged bar).

ACWR updates accordingly.

5 · Commit message
fix(sessions): join & group by session_number so Session 1 and 2 are independent; coach logs/charts now match athlete data

------------------------------------------------------------------
markdown
Copy
Edit

**Outcome**

* Coach dashboards treat Session 1 and 2 as separate entities.  
* Loads, participants, and durations are accurate; no more unintended averaging.  
* All other parts of the application remain unchanged.





