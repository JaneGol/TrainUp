Below is a **single, consolidated “Replit Agent Task List.”**
Copy **everything** inside the grey block into the **Ask AI** side-panel of your *SportsMindTracker* Repl and hit **Send**.
It will:

1. **Synchronise Training-Log, Training-Load chart, and Session counter** (normalise type names, use coach-local dates, period-aware query keys, correct session tally).
2. **Rename “Training 1/2” → “Session 1/2”** across the athlete form, coach log rows, tooltips, and any filter options—without touching the database schema.

---

````txt
# ----------------------------------------------------------------
# Replit-Agent Mega-Task  –  Load-data sync + rename Session labels
# Repo: https://replit.com/@e89030922661/SportsMindTracker
# ----------------------------------------------------------------

## PART A · DATA CONSISTENCY (chart ⟷ log ⟷ counters)

### 1. Normalise session type labels
#### 1.1  src/utils/normalizeSessionType.ts
```ts
export const normalizeType = (t:string) =>
  t.startsWith('Field') ? 'Field'
: t.startsWith('Gym')   ? 'Gym'
: 'Match';
````

#### 1.2  Apply on server

In every load endpoint (e.g. **api/load/week.ts**, **rpc\_load\_by\_day**) map rows:

```ts
rows = rows.map(r => ({ ...r, type: normalizeType(r.type) }));
```

### 2. Group by coach-local calendar date

#### 2.1  Send client timezone once

**src/utils/api.ts**

```ts
axios.defaults.headers.common['X-TZ'] =
  Intl.DateTimeFormat().resolvedOptions().timeZone;
```

#### 2.2  SQL change (Supabase / Prisma raw)

```sql
SELECT date_trunc('day', session_date AT TIME ZONE :tz) AS day,
       normalize_type(type)                             AS type,
       SUM(session_load)                                AS load
FROM training_sessions
WHERE athlete_id = :ath
  AND session_date BETWEEN :start AND :end
GROUP BY day, type
ORDER BY day;
```

### 3. Make load query key period-aware

**src/hooks/useLoad.ts**

```diff
- return useQuery(['load', athlete], () => fetchLoad(athlete, period));
+ return useQuery(['load', athlete, period], () => fetchLoad(athlete, period));
```

### 4. Correct session counter

In **LoadInsights** page (header line):

```diff
- const totalSessions = weekLoad.length;   // counts days only
+ const totalSessions = rawSessions.length; // each row = one session
```

*(`rawSessions` = ungrouped array from the same fetch.)*

---

## PART B · UI RENAME  “Training 1/2” → “Session 1/2”

### 5. Athlete RPE form

**src/pages/athlete/RpeForm.tsx**

```diff
- <option value={1}>Training 1</option>
- <option value={2}>Training 2</option>
+ <option value={1}>Session 1</option>
+ <option value={2}>Session 2</option>

- label text: “Select training session”
+ label text: “Select session”
```

Default logic unchanged (Field ➜ 1).

### 6. Coach Training-Log rows

**src/components/TrainingRow\.tsx**

```diff
- const title = sn===2 ? `${name} (Training 2)` : name;
+ const title = sn===2 ? `${name} (Session 2)`  : name;
```

### 7. Tooltip in Training-Load chart (if shows “Training 2”)

Replace any hard-coded “Training” with “Session”.

### 8. Optional filter dropdowns

If you have session filter options:

```diff
- Training 1 / Training 2
+ Session 1 / Session 2
```

---

## 9. Tests / QA (agent runs)

* Training-Load bars now equal log rows (Field 952 etc.).
* Header shows correct **Sessions** count.
* Changing period updates both charts.
* Athlete form defaults to **Session 1**, can pick **Session 2**.
* Coach log rows and tooltips display “Session 2”.

## 10. Commit message

> feat(sync+ui): unify load data (type/date/period), correct session counter, rename Training 1/2 ➜ Session 1/2

# End of agent task

```

---
```
