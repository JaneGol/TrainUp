Below is a **single “Replit Agent Task List”** that brings the new *Load Insights* screen in line with your design rules:

* **Week-picker**: full-width (same as Athlete select) and ISO-label “W22 (26.05 – 01.06)”.
* **Weekly Training Load chart**:

  * X-axis ticks = **day numbers** of the chosen week, format **26.05, 27.05 …**.
  * Compact legend (Field ▇ Gym ▇ Match ▇).
* **Weekly Work-Load (10 weeks)**: add a thin **ACWR line** + legend chip.
* Fonts inherit the dashboard base (`text-sm`, `font-medium`) so everything matches.

Copy **everything** between the grey lines into **Ask AI** and press **Send**.

---

````txt
# ------------------------------------------------------------------
# Replit-Agent Task – Polish Load-Insights layout, date formats, legends
# Repo: https://replit.com/@e89030922661/SportsMindTracker
# ------------------------------------------------------------------

## 1 ▸ WEEK SELECTOR – full width + ISO label “W22 (26.05-01.06)”

### 1.1  util update
# src/components/WeekSelect.ts
```ts
import { eachWeekOfInterval, format, getISOWeek, startOfISOWeek, endOfISOWeek } from 'date-fns';

export const buildWeekOptions = () => {
  const weeks = eachWeekOfInterval({
    start: endOfISOWeek(new Date(Date.now() - 1000*60*60*24*70)),
    end  : new Date()
  }).reverse();

  return weeks.map(d => {
    const w   = getISOWeek(d);
    const s   = startOfISOWeek(d);
    const e   = endOfISOWeek(d);
    const label = `W${w} (${format(s,'dd.MM')}-${format(e,'dd.MM')})`;
    return { value: format(s,'yyyy-MM-dd'), label };
  });
};
````

### 1.2  selector width

In **LoadInsights.tsx**:

```diff
- <Select … className="w-[200px]" />
+ <Select … className="w-full"    />
```

(the component already expands like the Athlete select).

---

## 2 ▸ WEEKLY TRAINING LOAD CHART

### 2.1  X-axis tick format

# src/components/WeeklyLoadColumns.tsx

```diff
- <XAxis dataKey="date" tickFormatter={d=>format(parseISO(d),'d MMM')}/>
+ <XAxis dataKey="date" tickFormatter={d=>format(parseISO(d),'dd.MM')}/>
```

### 2.2  Legend

Add under chart:

```tsx
<div className="flex justify-center gap-3 mt-1 text-[11px]">
  <span className="flex items-center gap-1"><span className="w-3 h-2 bg-[#b5f23d]"></span>Field</span>
  <span className="flex items-center gap-1"><span className="w-3 h-2 bg-[#547aff]"></span>Gym</span>
  <span className="flex items-center gap-1"><span className="w-3 h-2 bg-[#ff6f6f]"></span>Match</span>
</div>
```

### 2.3  Ensure data loads

`useWeekLoad(athleteId, weekStart)` already called – chart will not be empty as long as API returns rows. If API returns zero rows, show placeholder bar:

```ts
const plotted = weekData.length ? weekData : dummyWeekBars(weekStart);
```

---

## 3 ▸ WEEKLY WORK-LOAD (10 weeks) – ACWR line + legend

### 3.1  TenWeekChart component

```tsx
<BarChart … >
  … Field/Gym/Match bars …
  <Line yAxisId="right" dataKey="acwr" stroke="#facc15" dot={{r:3}}/>
  <YAxis yAxisId="right" orientation="right" domain={[0,2]} hide />
</BarChart>

<div className="flex justify-center gap-3 mt-1 text-[11px]">
  … Field/Gym/Match chips …
  <span className="flex items-center gap-1">
    <span className="w-3 h-px bg-[#facc15] inline-block"></span>ACWR
  </span>
</div>
```

### 3.2  pad fonts

All captions/labels `className="text-sm"` to match key-metric cards.

---

## 4 ▸ Fonts + spacing consistency

Add to globals if not present:

```css
.select-label, .chart-title { @apply text-sm font-medium; }
```

---

## 5 ▸ Remove stray “Training Load” heading (done previously)

Ensure there’s only **Weekly Training Load** title—in `text-base font-semibold` centred.

---

## 6 ▸ Commit message

> style(load-insights): full-width week picker, dd.MM labels, compact legends, ACWR line on 10-week chart

# End of agent task

```

---
```
