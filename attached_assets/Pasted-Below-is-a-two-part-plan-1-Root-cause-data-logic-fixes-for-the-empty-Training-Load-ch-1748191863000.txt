Below is a **two-part plan**:

1. **Root-cause & data-logic fixes** for the empty ‚ÄúTraining Load‚Äù chart and the ACWR mismatch.
2. **UI refactor** that merges the *Week 22 summary* and the *Training Load* chart into one tidy, colour-coded card.

I‚Äôve wrapped everything into a **copy-ready ‚ÄúReplit Agent Task List‚Äù** for you at the end.

---

## 1 ¬∑ Why the chart is blank & ACWR numbers disagree

| Symptom                                                                         | Cause                                                                                                                                                                                                                                      | Fix                                                                                                                  |
| ------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | -------------------------------------------------------------------------------------------------------------------- |
| **Training Load chart = empty** while ACWR has data                             | Backend endpoint `/coach/{id}/load?period=30d` returns `{ field:‚Ä¶, gym:‚Ä¶, match:‚Ä¶ }`, but the chart component expects keys **`Field` `Gym` `Match/Game`** (capitalisation + slash) ‚Üí Recharts receives `undefined` arrays ‚áí no dots/lines. | Normalise keys **or** map in the hook.                                                                               |
| **ACWR mini chart shows 1.2** for 25 May but ‚ÄúCurrent ACWR‚Äù table says **1.00** | Table uses *rounded integers* acute = 384 / chronic = 384, then divides again in UI ‚Üí 1.00.<br>Chart uses *exact float* loads that include today‚Äôs session coefficient (1.2) ‚Üí \~460 / 405 ‚âà 1.13 ‚Üí rounded to 1.2 in tooltip.             | Use the **same utility** (`calcAcwr(acute, chronic)`) for both chart & table, and pass floats directly to the table. |

### Quick patch inside the data hook

```ts
const fixKeys = (row: any) => ({
  date  : row.date,
  Field : row.field ?? row.Field ?? 0,
  Gym   : row.gym   ?? row.Gym   ?? 0,
  Match : row.match ?? row["Match/Game"] ?? 0,
});

const { data } = useQuery(['load', athlete, period], () =>
  api.get(...).then(r => r.data.map(fixKeys)));
```

And a shared ACWR helper:

```ts
export const calcAcwr = (acute:number, chronic:number)=>
  +(acute / (chronic || 1)).toFixed(2);
```

---

## 2 ¬∑ UI refactor ‚Äì merge Week-summary & chart

**Before**

```
[ Week 22 | Total AU: 0 | Avg ACWR: 1.14 ]
[ Training Load chart                       ]
```

**After**

```
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ Week 22  (20 ‚Äì 26 May)                  ‚îÇ
‚îÇ Total AU: 4 520      Avg ACWR: 1.14     ‚îÇ
‚îÇ                                         ‚îÇ
‚îÇ   ‚ï≠‚îÄ‚îÄ Training-Load stacked area chart ‚ïÆ ‚îÇ
‚îÇ   ‚îÇ Field ‚ñá‚ñá‚ñá Gym ‚ñá‚ñá Match ‚ñá           ‚îÇ
‚îÇ   ‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
```

* Single **Card** (`bg-zinc-800/90`) with 12 px padding.
* Week header row in `text-sm font-semibold text-zinc-300`.
* Summary line in `text-[13px] text-zinc-400`.
* Chart sits underneath; no extra margins.

---

## 3 ¬∑ Agent Task List  üöÄ

Copy the block below ‚Üí **Ask AI** ‚Üí **Send**.

````txt
# ----------------------------------------------------------------
# Replit Agent Task ‚Äì Fix Training Load data & merge week summary
# Repo: https://replit.com/@e89030922661/SportsMindTracker
# ----------------------------------------------------------------

## 1. Normalise keys coming from /load endpoint
### 1.1  File: src/hooks/useTrainingLoad.ts
```ts
import { useQuery } from "@tanstack/react-query";
import api from "@/utils/api";
import { calcAcwr } from "@/utils/acwr";

const keyFix = (row:any)=>({
  date  : row.date,
  Field : row.field ?? row.Field ?? 0,
  Gym   : row.gym   ?? row.Gym   ?? 0,
  Match : row.match ?? row["Match/Game"] ?? 0,
});

export const useTrainingLoad = (ath:string, period:string)=>
  useQuery(["load", ath, period],
    ()=> api.get(`/load?ath=${ath}&period=${period}`)
            .then(r=>r.data.map(keyFix)));
````

## 2. Shared ACWR helper

### 2.1  File: src/utils/acwr.ts

```ts
export const calcAcwr = (acute:number, chronic:number)=>
  +(acute / (chronic || 1)).toFixed(2);
```

Use this in both ACWR chart hook **and** Current ACWR table.

## 3. Merge Week summary + chart

### 3.1  File: src/pages/coach/LoadInsights.tsx

Replace the two separate blocks with:

```tsx
<Card className="bg-zinc-800/90 mt-6 px-4 py-3">
  <h3 className="text-sm font-semibold text-zinc-300">
    {`Week ${weekNo} (${weekRangeStr})`}
  </h3>
  <p className="text-[13px] text-zinc-400 mb-2">
    Total AU: {totalAu} &nbsp;|&nbsp; Avg ACWR: {weekAcwr}
  </p>

  <TrainingLoadChart data={weekData} height={200}/>
</Card>
```

*(where `weekNo`, `weekRangeStr`, `totalAu`, `weekAcwr`, `weekData`
come from the existing selector logic)*

### 3.2  Remove the old `<Card>` that only contained the ‚ÄúTraining Load‚Äù chart.

## 4. Padding below the merged card

Give the next section (`ACWR` chart card) class `mt-8`.

## 5. Commit message

> fix(load): normalise load keys, unify ACWR calc, merge week header + chart

# End of agent task

```

---

**After the agent runs**

* The **Training Load** chart will render (no more empty axes).  
* ACWR number in the table will match the yellow line in the chart.  
* The Week summary and chart sit together, freeing vertical space.
```
