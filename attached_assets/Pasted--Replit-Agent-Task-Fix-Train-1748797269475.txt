# ------------------------------------------------------------------
# Replit-Agent Task – Fix Training-Log RPE 0/8 & missing 1-Jun load
# Repo: https://replit.com/@e89030922661/FormTrack
# ------------------------------------------------------------------

## 0 ▸ Root Cause Summary
1. **Training-Log rows show “RPE 0 / 8”** because the SQL query
   joins `training_sessions` but never averages the
   actual `rpe_submissions` table — when no JOIN match is found,
   `AVG(rs.rpe)` returns NULL → the front-end prints “0”.
2. **Weekly Training Load omits 1 Jun** because the endpoint filters
   with a strict **`<`** instead of **`<=`** on the week-end date and
   converts dates without TZ; sessions logged after 00:00 UTC are excluded.
3. **Duration NULL → 0 AU**: historical rows have `duration_minutes = NULL`
   so recalculation yields 0.  Default should be 60 min.

## 1 ▸ Files to Touch
* server/storage.ts          (SQL rebuild)
* server/controllers/sessions.ts  (PATCH duration)
* migrations/20240601_default_60.sql (NEW)
* client/src/hooks/useTrainingLog.ts (no logic change—just expect correct JSON)

## 2 ▸ SQL Fixes
### 2.1  storage.ts  ➜  getTrainingLog
```sql
SELECT ts.id,
       ts.session_date,
       ts.type,
       COALESCE(AVG(rs.rpe),0)                  AS avg_rpe,
       COUNT(rs.id)                             AS participant_cnt,
       ts.duration_minutes,
       COALESCE( ROUND(
         AVG(rs.rpe) * (1.0 + (AVG(rs.emotional_load)::int-1)*0.125)
         * ts.duration_minutes
       ), 0 )                                   AS session_load
  FROM training_sessions ts
  LEFT JOIN rpe_submissions rs ON rs.session_id = ts.id
 WHERE ts.athlete_id = $1
 GROUP BY ts.id
 ORDER BY ts.session_date DESC;
RPE now averages only actual submissions; “0/8” disappears.

2.2 getWeeklyLoad & getTenWeekLoad
diff
Copy
Edit
- WHERE session_date  <  $endOfWeek
+ WHERE session_date <= $endOfWeek  -- include Sunday or current day
Use endOfISOWeek(selected) from date-fns to compute $endOfWeek
in local TZ, not UTC.

2.3 Default duration = 60
migrations/20240601_default_60.sql

sql
Copy
Edit
ALTER TABLE training_sessions
  ALTER COLUMN duration_minutes SET DEFAULT 60,
  ALTER COLUMN duration_minutes SET NOT NULL;

-- Back-fill existing NULLs
UPDATE training_sessions
   SET duration_minutes = 60
 WHERE duration_minutes IS NULL;
3 ▸ PATCH duration recalculation
sessions.ts (PATCH /sessions/:id/duration)
After UPDATE duration_minutes, immediately call the same SQL block as in
getTrainingLog to recalc avg_rpe, session_load, then RETURNING *.

Respond JSON { id, duration_minutes, session_load } so front-end refresh
value without reload.

4 ▸ Front-End
No UI changes needed. The Training-Log hook already uses
avg_rpe, participant_cnt, and session_load; it will now receive
correct numbers. Weekly-Load chart will include 1 Jun bar automatically.

5 ▸ Commit Message
fix(db): join rpe_submissions for true avg_rpe, include sunday in weekly range, set duration default 60; recalcs session load on duration PATCH

------------------------------------------------------------------
pgsql
Copy
Edit

**Outcome**

* Training Log rows now show real `avg RPE / participant_cnt` (no more 0/8).  
* Weekly Training Load includes 1 Jun and any future Sundays.  
* All legacy sessions now assume 60 min by default; coach can still edit.  
* No other parts of the app are touched.






