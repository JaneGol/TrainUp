Here’s why you’re seeing 0.00 in Advanced Workload Metrics while the Weekly Load card and the ACWR (Last 10 Weeks) trend both say 0.5, plus the minimal fix we should push to your Repl so they always match.

Why the two widgets diverge
Widget	What it’s doing today	Situation that yields 0.00
Advanced Workload Metrics → ACWR	acuteLoad / chronicLoad where:
• acuteLoad = sum of last 7 days
• chronicLoad = 28-day moving average	If the athlete logged no load in the last 7 days then acuteLoad = 0, so the ratio returns 0.
Weekly Load card & 10-week ACWR trend	Same formula, but first fills missing days with the last non-zero load to avoid divide-by-zero.	Even when this week is empty, the back-fill gives a non-zero numerator, so you get 0.5 (or some other value).

So the two places really are running different helpers.

Quick data check
You can prove it by opening your Repl console:

ts
Copy
Edit
// last 7 days are all zero
getAcwr(0,    660)  // --> 0   (Advanced card path)

// helper with smoothing
getAcwrSmoothed([0,0,0,0,0,0,0], [110,110,110,110]) // --> 0.5 (chart path)
That matches what you’re seeing on screen.

Targeted change request (keep everything else untouched)
Title
Unify ACWR calculation across Advanced Workload Metrics, Weekly Load, and 10-week trend

Objective
Both widgets must call the same helper so the ratio is identical everywhere.
When acuteLoad === 0 or chronicLoad === 0, display an em-dash “—” instead of 0.00.

Scope

Layer	File(s)	Edit
Shared util	src/utils/workload/getAcwr.ts (new or merge existing)	```ts export function getAcwr(acute:number, chronic:number): number | null { if (!acute
Advanced Workload Metrics card	AdvancedMetrics.tsx	Replace inline math with const acwr = getAcwr(acute, chronic) and render “—” when it’s null.
Weekly Load card & ACWR trend	WeeklyLoad.tsx, AcwrTrend.tsx	Import the same helper; remove their bespoke smoothing.
Tests	getAcwr.test.ts	Cover: (0,anything) → null, (anything,0) → null, valid ratio case.

Do NOT change anything else
• Leave Training Strain, Monotony, VI, styles, and analytics events intact.
• No dependency bumps, layout tweaks, or formatting passes.

Acceptance criteria

If the last 7 days contain no sessions, both widgets show “—”.

Otherwise they display the same two-decimal ratio everywhere.

Unit tests pass; Lighthouse scores unchanged (±1).

Deployed Repl (replit.com/@e89030922661/TrainUp) shows matched values and no regressions.

Apply the diff to all replicas, keeping the patch laser-focused.

Once that helper is shared, the 0.00 vs 0.5 mismatch will disappear. Let me know if you’d like a hand wiring the import paths or running a quick manual test after the change!