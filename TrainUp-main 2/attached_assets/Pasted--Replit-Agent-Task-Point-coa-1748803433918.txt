# ------------------------------------------------------------------
# Replit-Agent Task · Point coach dashboards to training_entries
# Repo: https://replit.com/@e89030922661/FormTrack
# ------------------------------------------------------------------

GOAL  
=====  
Coach interface (Training Log, Weekly Training Load, ACWR) must display the
same metrics athletes already see. `training_entries` is the canonical table.
Remove dependency on empty rpe_submissions.

STEPS  
=====

1. **SQL view – session_metrics_from_entries**
   *Create once via migration.*

```sql
CREATE OR REPLACE VIEW session_metrics_from_entries AS
SELECT 
    te.date                                AS session_date,
    CASE
        WHEN te.training_type ILIKE '%field%' THEN 'Field'
        WHEN te.training_type ILIKE '%gym%'   THEN 'Gym'
        WHEN te.training_type ILIKE '%match%' THEN 'Match'
        ELSE 'Other'
    END                                     AS type,
    te.session_number,
    te.team_id,
    COUNT(*)                                AS participants,          -- # athletes
    AVG(te.effort_level)::NUMERIC(4,2)      AS avg_rpe,
    ROUND(
        AVG(te.effort_level)
      * (1 + (AVG(te.emotional_load)::INT - 1) * 0.125)              -- emotional coeff
      * COALESCE(ts.duration_minutes, 60)                             -- duration (default 60)
      * CASE                                                          -- type coeff
          WHEN te.training_type ILIKE '%field%' THEN 1.2
          WHEN te.training_type ILIKE '%gym%'   THEN 1.0
          WHEN te.training_type ILIKE '%match%' THEN 1.5
          ELSE 1.0
        END
    )                                         AS session_load
FROM training_entries te
LEFT JOIN training_sessions ts
       ON ts.session_date = te.date
      AND ts.session_number = te.session_number
GROUP BY 1,2,3,4;
storage.ts – swap queries
All coach endpoints should aggregate this view.

ts
Copy
Edit
export async function getCoachTrainingLog(teamId:string){
  return db.$queryRaw/*sql*/`
      SELECT session_date, type, session_number,
             participants, avg_rpe, session_load
        FROM session_metrics_from_entries
       WHERE team_id = ${teamId}
       ORDER BY session_date DESC, session_number;`;
}

export async function getCoachWeeklyLoad(teamId:string, weekStart:Date){
  return db.$queryRaw/*sql*/`
      SELECT session_date AS day,
             SUM(session_load)  AS daily_load,
             SUM(participants)  AS p_cnt
        FROM session_metrics_from_entries
       WHERE team_id=${teamId}
         AND session_date BETWEEN ${weekStart} AND ${new Date(weekStart.getTime()+6*864e5)}
       GROUP BY session_date
       ORDER BY session_date;`;
}
Front-end tweaks
Training Log row:

jsx
Copy
Edit
{row.participants} / {teamSize}           // replaces “0 / 8”
{row.session_load || '—'} AU              // load appears immediately
Weekly-Load & ACWR charts already consume daily_load; no further change.

Delete legacy code path (optional)
Remove unused /rpe_submissions coach endpoints to avoid confusion.

Verify

Refresh coach dashboard – May 30–31 bars and participant counts now match Gen’s athlete view.

New submissions or duration edits reflect instantly (because view always re-aggregates live data).

COMMIT MESSAGE
refactor(coach-data): coach dashboards now aggregate training_entries via view; fixes 0-participant / 0-AU mismatch

------------------------------------------------------------------
yaml
Copy
Edit

---

### If you’d rather keep rpe_submissions alive…

Let the agent know and we can draft a smaller bridge trigger (Option A), but long-term you’ll still be maintaining two parallel tables. Unifying now is simplest and removes this class of bugs permanently.





